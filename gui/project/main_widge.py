# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main_widge.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import sys
import time

from PyQt5 import QtCore, QtGui, QtWidgets
from utils.demo import get_host_set
from PyQt5.QtGui import QColor, QBrush
from PyQt5.QtWidgets import QTableWidgetItem, QAbstractItemView
from Catch_widge import Catch_widge
from utils.demo import get_data_from_tcp
from PyQt5.QtCore import Qt

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setEnabled(True)
        MainWindow.resize(970, 500)
        # MainWindow.setFixedSize(970, 500)
        MainWindow.setMouseTracking(False)
        MainWindow.setTabletTracking(False)
        MainWindow.setAcceptDrops(False)
        MainWindow.setAccessibleName("")
        MainWindow.setAnimated(True)
        MainWindow.setDocumentMode(False)
        MainWindow.setDockNestingEnabled(False)
        MainWindow.setUnifiedTitleAndToolBarOnMac(False)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setObjectName("pushButton")

        #
        self.pushButton.clicked.connect(self.Onclick)
        #

        self.gridLayout.addWidget(self.pushButton, 0, 1, 1, 1)

        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)

        head_list = ['id', 'name', 'ip', '控制器版本', '状态', '操作']
        self.tableWidget.setRowCount(0)
        self.tableWidget.setColumnCount(len(head_list))
        self.tableWidget.setHorizontalHeaderLabels(head_list)
        self.tableWidget.setObjectName("tableWidget")
        self.gridLayout.addWidget(self.tableWidget, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 553, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.catch_widge = Catch_widge(None)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton.setText(_translate("MainWindow", "刷新"))

    def Onclick(self):

        '''
        渲染机器人
        '''
        # print('1231234')
        robot_list = get_host_set(54545)
        list_len = len(robot_list)
        # print(list_len)
        self.tableWidget.setRowCount(list_len)
        # head_list = ['id', 'name', 'ip', '控制器版本', '状态']
        for i in range(len(robot_list)):
            print(i)
            id_item = QTableWidgetItem(robot_list[i][1])
            self.tableWidget.setItem(i, 0, id_item)
            name_item = QTableWidgetItem(robot_list[i][4])
            self.tableWidget.setItem(i, 1, name_item)
            ip_item = QTableWidgetItem(robot_list[i][0])
            self.tableWidget.setItem(i, 2, ip_item)
            version_item = QTableWidgetItem(robot_list[i][5])
            self.tableWidget.setItem(i, 3, version_item)
            if robot_list[i][3] == 'True':
                enable_item = QTableWidgetItem('已连接')
                # 设置字体颜色
                enable_item.setForeground(QBrush(QColor(255, 0, 0)))
                self.tableWidget.setItem(i, 4, enable_item)
            else:
                enable_item = QTableWidgetItem('未连接')

                self.tableWidget.setItem(i, 4, enable_item)
            print(i)
            begin_btn = QtWidgets.QPushButton('连接')
            begin_btn.setDown(False)
            begin_btn.clicked.connect(self.begin_onclick)
            print(i)
            self.tableWidget.setCellWidget(i, 5, begin_btn)

        # 禁止编辑
        self.tableWidget.setEditTriggers(QAbstractItemView.NoEditTriggers)

        # 整行选择
        self.tableWidget.setSelectionBehavior(QAbstractItemView.SelectRows)

        # 行列调整
        self.tableWidget.verticalHeader().setVisible(False)

        self.tableWidget.setGridStyle(False)

        print('end')

    def begin_onclick(self, index):
        row_index = self.tableWidget.currentIndex().row()

        print(row_index)
        ip = self.tableWidget.item(row_index, 2).text()
        res = get_data_from_tcp(ip, 10003)
        print(res)
        if not res:
            from PyQt5.QtWidgets import QMessageBox
            print(ip, '不可连接')
            QMessageBox.information(None, '提示', '不可连接', QMessageBox.Ok)
            # time.sleep(10)
            return
        print(ip, '可连接')
        self.catch_widge.ip = ip
        self.catch_widge.setWindowModality(Qt.ApplicationModal)
        print(self.catch_widge.ip)
        self.catch_widge.show()
        print('over')
        # sys.exit()
